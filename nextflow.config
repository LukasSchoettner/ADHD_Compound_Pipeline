params {
    // GEO dataset parameters
    geo_id = "GSE85871"
    samples = "GSM2286316,GSM2286317,GSM2286238,GSM2286239"
    compound_name = "Gastrodin"
    ligand_cid = "115067"
    description = "Gastrodin experiment for ADHD pipeline testing"

    raw_p = 0.01
    adj_p = 0.05
    log_fc_up = 1
    log_fc_down = -1

    workDir = "$projectDir/work"

    project_dir = "$projectDir"
    scripts_dir = "$projectDir/scripts"
    results_dir = "$projectDir/results"
    docking_results_dir = "$projectDir/results/molecular_docking"
    nx_data_dir = "$projectDir/data"
    // Simulation parameters
    simulation_time = 100

    // Output directories
    publishDir = "results/"

    // Database connection string
    db_connection_string = "postgresql://postgres:admin@db:5432/adhd_research"
}

database {

    db_connection_string = "postgresql://postgres:admin@db:5432/adhd_research"

}

process {
    cleanup = false
    executor = 'local'
    errorStrategy = 'retry'
    maxRetries = 0
    memory = '4 GB'
    cpus = 2

    withName: 'analyze_geo' {
        memory = '8 GB'
        cpus = 8
    }

    withName: 'build_ppi_network' {
        memory = '6 GB'
        cpus = 2
    }

    withName: 'molecular_docking' {
        memory = '8 GB'
        cpus = 4
    }

    withName: 'molecular_dynamics' {
        memory = '14 GB'
        cpus = 15
    }
}

//workflow.onComplete {
//    def experiment_id_ = readFile('experiment_id.txt').trim()
//    exec "psql -c \"UPDATE experiment SET status = 'Success' WHERE experiment_id = ${experiment_id_}\""
//}

//workflow.onError {
//    def experiment_id_ = readFile('experiment_id.txt').trim()
//    def error_message = workflow.error.message.replaceAll("'", "''")
//    exec "psql -c \"UPDATE experiment SET status = 'Failed', last_error = '${error_message}' WHERE experiment_id = ${experiment_id_}\""
//}

timeline {
    enabled = true
    file = 'timeline.html'
    overwrite = true
}

trace {
    enabled = true
    file = 'trace.txt'
    overwrite = true
}

report {
    enabled = true
    file = 'report.html'
    overwrite = true
}

log {
    file = "nextflow.log"
    overwrite = true
}

dag {
    enabled = true
    file = 'dag.png'
    overwrite = true
}
